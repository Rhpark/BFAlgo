#include<iostream>
#include<algorithm>
#include<vector>
#include<math.h>
#include<string>

using namespace std;

class Algo
{
	vector<int>vcTotal;
	int total;
	int **map;
	int x,y;
public:
	void InputTotal()
	{
		cin>>total;
		for(int i = 0 ; i < total ; i ++)
		{
			Cacul();
		}
		Print();
	}
	void Cacul()
	{		
		string fst,sec;
		vector<int>vcLen;
		cin>>y>>x;
		map = new int*[y];
		for(int i = 0 ; i < y ; i ++)
		{
			map[i] = new int[x];
			for(int j = 0 ; j < x ; j ++)
			{
				cin>>fst;
				map[i][j] = Fst(fst[0])+Sec(fst[1]);
			}
			
			if(x > 1)
			{
				sort(&map[i][0],&map[i][x]);
				vcLen.push_back(map[i][(x)/2]);
			}
			else
				vcLen.push_back(map[i][0]);
		}
		vcLen.push_back(0);
		int max = *max_element(&vcLen[0],&vcLen[vcLen.size()-1]);
		int cnt = 0;
		for(int i = 0 ; i < vcLen.size()-1 ; i ++)
		{
			cnt++;
			if(vcLen[i] == max)
				break;
		}
		vcTotal.push_back(cnt);
	}
	int Fst(char fst)
	{
		switch(fst){
		case 'S':
			return 8;
		case 'D':
			return 6;
		case 'H':
			return 4;
		case 'K':
			return 2;
		}
	}
	int Sec(char sec)
	{
		switch(sec){
		case '2':
			return 200;
		case '3':
			return 300;
		case '4':
			return 400;
		case '5':
			return 500;
		case '6':
			return 600;
		case '7':
			return 700;
		case '8':
			return 800;
		case '9':
			return 900;
		case 'J':
			return 1100;
		case 'Q':
			return 1200;
		case 'K':
			return 1300;
		case 'A':
			return 1400;
		case '1':
			return 1000;
		}
	}
	void Print()
	{
		for(int i = 0 ; i < vcTotal.size() ; i ++)
		{
			cout<<vcTotal[i]<<endl;
		}
	}
};
int main()
{
	Algo a;
	a.InputTotal();
	return 0;
}